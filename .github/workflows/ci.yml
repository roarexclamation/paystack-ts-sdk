name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install OpenAPI Generator CLI
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Generate SDK
        run: |
          npm run generate || (echo "Generate failed, continuing with existing code" && exit 0)

      - name: Build
        run: npm run compile

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Check coverage directory
        run: |
          ls -la coverage/ || echo "No coverage directory found"

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x' && hashFiles('coverage/lcov.info') != ''
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Install OpenAPI Generator CLI
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Build SDK
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
